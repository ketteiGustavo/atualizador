name: Atualizar versao_release.txt (COBOL 4.0)

on:
  schedule:
    # Seg–Qui às 10h, 14h e 16h (BRT) = 13h, 17h, 19h UTC
    - cron: "0 13,17,19 * * 1-4"
  workflow_dispatch: {}

permissions:
  contents: write

env:
  TZ: America/Sao_Paulo
  PATH_VERSAO_FILE: "Atual/versao_release.txt"
  URL_BASE_VERSAO40:  "https://s3.amazonaws.com/avancoprogramas/integral/versao40-"
  URL_BASE_RELEASE40: "https://s3.amazonaws.com/avancoprogramas/integral/release40-"

jobs:
  auto-update:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Garantir permissão de execução do script
        run: chmod +x scripts/check_release_first.sh

      - name: Executar verificação
        id: runcheck
        run: |
          out="$(./scripts/check_release_first.sh)"
          echo "$out"
          echo "result=$out" >> "$GITHUB_OUTPUT"

      # Se houve alteração, commita direto na main
      - name: Commit & Push se mudou (direto na main)
        if: contains(steps.runcheck.outputs.result, 'CHANGED|')
        run: |
          git config user.name  "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add "${PATH_VERSAO_FILE}"
          git commit -m "chore: atualizar versao_release.txt (auto)"
          git push

      # Interpretar o resultado em variáveis simples (tipo/from/to)
      - name: Interpretar resultado
        if: contains(steps.runcheck.outputs.result, 'CHANGED|')
        id: interp
        shell: bash
        run: |
          res="${{ steps.runcheck.outputs.result }}"
          # Formatos:
          #   CHANGED|RELEASE|<old_rel>|<new_rel>
          #   CHANGED|VERSION|<old_ver>|<new_ver>
          kind="$(echo "$res" | awk -F'|' '{print $2}')"
          from="$(echo "$res" | awk -F'|' '{print $3}')"
          to="$(echo "$res"   | awk -F'|' '{print $4}')"

          # Mapear para assunto amigável
          if [[ "$kind" == "VERSION" ]]; then
            kind_human="VERSÃO"
          else
            kind_human="RELEASE"
          fi

          echo "kind=${kind_human}" >> "$GITHUB_OUTPUT"
          echo "from=${from}"        >> "$GITHUB_OUTPUT"
          echo "to=${to}"            >> "$GITHUB_OUTPUT"

      # (Opcional) Ler conteúdo atual do arquivo para inserir no e-mail
      - name: Ler arquivo versao_release.txt
        if: contains(steps.runcheck.outputs.result, 'CHANGED|')
        id: file
        shell: bash
        run: |
          echo 'content<<EOF' >> $GITHUB_OUTPUT
          cat "${PATH_VERSAO_FILE}" >> $GITHUB_OUTPUT
          echo 'EOF' >> $GITHUB_OUTPUT

      # Enviar e-mail
      - name: "Enviar e-mail (conteúdo: de → para)"
        if: contains(steps.runcheck.outputs.result, 'CHANGED|')
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: ${{ secrets.SMTP_HOST }}
          server_port:    ${{ secrets.SMTP_PORT }}
          username:       ${{ secrets.SMTP_USERNAME }}
          password:       ${{ secrets.SMTP_PASSWORD }}
          to:             ${{ secrets.TO_EMAIL }}
          from:           ${{ secrets.FROM_EMAIL }}
          secure:         true
          subject: >
            Atualização de ${{ steps.interp.outputs.kind }} no repositório
          body: |
            Houve uma atualização automática em **Atual/versao_release.txt**.

            Tipo: ${{ steps.interp.outputs.kind }}


            Alteração:
            De → ${{ steps.interp.outputs.from }}
            Para → ${{ steps.interp.outputs.to }}

            Conteúdo atual do arquivo:
            ${{ steps.file.outputs.content }}
